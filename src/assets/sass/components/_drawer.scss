@keyframes tf-icon-to-full {
    from {
        width: 3.5em;
    }
}

@keyframes tf-full-to-icon {
    from {
        width: auto;
    }
}

.drawer {
    border-radius: 0;
    box-shadow: none;
    color: var(--tavenem-color-text);
    margin: 0 !important;
    outline: 0;
    overflow: hidden;
    transition: transform 225ms cubic-bezier(0, 0, 0.2, 1) 0ms;
    z-index: var(--tavenem-zindex-drawer);

    &.filled {
        background-color: var(--tavenem-color-bg-surface);
    }

    > {
        .header,
        .footer {
            min-height: 4em;
        }
    }

    &.dense, .dense & {
        > {
            .header,
            .footer {
                min-height: 3em;
            }
        }
    }

    @media (min-width: 768px) and (orientation: landscape) {
        > {
            .header,
            .footer {
                min-height: 3em;
            }
        }
    }

    &.open {
        overflow-y: auto;
    }

    &.left,
    &.right {
        flex-direction: column;
        height: 100%;
        max-width: 15em;
        transition: width 0ms 400ms;
        width: 0;

        @media (prefers-reduced-motion) {
            transition: none;
        }

        @media (max-width: 767px) {
            width: 100%;
        }

        .drawer-control,
        .drawer-close-small {
            @media (min-width: 768px) {
                display: none;
            }
        }

        &.icon {
            animation: tf-full-to-icon 225ms cubic-bezier(0, 0, 0.2, 1);
            padding-left: .5em;
            padding-right: .5em;
            transition: width 225ms cubic-bezier(0, 0, 0.2, 1);
            width: 3.5em;

            @media (prefers-reduced-motion) {
                animation: none;
                transition: none;
            }

            > * {
                overflow: hidden;
            }

            &:not(.open) .list > * {
                padding-left: 0;
                padding-right: 0;
                padding-inline-end: 0;
                padding-inline-start: 0;

                > {
                    *:not(ul, .list, .collapse, .icon, .avatar) {
                        display: none;
                    }

                    .icon, .avatar {
                        ~ {
                            .icon, .avatar {
                                display: none;
                            }
                        }
                    }
                }
            }
        }

        &.open {
            width: auto;
        }
    }

    &.left {
        grid-area: leftdrawer;

        &.closed {
            animation: tf-slide-out-left 225ms cubic-bezier(0, 0, 0.2, 1);

            @media (prefers-reduced-motion) {
                animation: none;
            }
        }

        &.open {
            &.icon {
                animation: tf-icon-to-full 225ms cubic-bezier(0, 0, 0.2, 1);

                @media (prefers-reduced-motion) {
                    animation: none;
                }
            }

            &:not(.icon) {
                animation: tf-slide-in-left 225ms cubic-bezier(0, 0, 0.2, 1);

                @media (prefers-reduced-motion) {
                    animation: none;
                }
            }
        }
    }

    &.right {
        grid-area: rightdrawer;

        &.closed {
            animation: tf-slide-out-right 225ms cubic-bezier(0, 0, 0.2, 1);

            @media (prefers-reduced-motion) {
                animation: none;
            }
        }

        &.open {
            &.icon {
                animation: tf-icon-to-full 225ms cubic-bezier(0, 0, 0.2, 1);

                @media (prefers-reduced-motion) {
                    animation: none;
                }
            }

            &:not(.icon) {
                animation: tf-slide-in-right 225ms cubic-bezier(0, 0, 0.2, 1);

                @media (prefers-reduced-motion) {
                    animation: none;
                }
            }
        }
    }

    &.bottom,
    &.top {
        flex-direction: row;
        flex-wrap: wrap;
        height: 0;
        max-height: 20em;
        padding-left: 1.5em;
        padding-right: 1.5em;
        transition: height 0ms 400ms;
        width: 100%;

        @media (prefers-reduced-motion) {
            transition: none;
        }

        &.open {
            height: auto;
        }
    }

    &.bottom {
        grid-area: bottomdrawer;

        &.closed {
            animation: tf-slide-out-bottom 225ms cubic-bezier(0, 0, 0.2, 1);

            @media (prefers-reduced-motion) {
                animation: none;
            }
        }

        &.open {
            animation: tf-slide-in-bottom 225ms cubic-bezier(0, 0, 0.2, 1);

            @media (prefers-reduced-motion) {
                animation: none;
            }
        }
    }

    &.top {
        grid-area: topdrawer;

        &.closed {
            animation: tf-slide-out-top 225ms cubic-bezier(0, 0, 0.2, 1);

            @media (prefers-reduced-motion) {
                animation: none;
            }
        }

        &.open {
            animation: tf-slide-in-top 225ms cubic-bezier(0, 0, 0.2, 1);

            @media (prefers-reduced-motion) {
                animation: none;
            }
        }
    }
}

.drawer-container {
    > .overlay.drawer-overlay {
        display: none;
    }

    &.drawer-open {
        .overlay {
            display: flex;
        }
    }
}

@each $breakpoint, $min-width in $breakpoints {
    @media (min-width: $min-width) {
        .drawer-#{$breakpoint} {
            overflow-y: auto;

            .drawer-control,
            .btn-close {
                display: none;
            }

            &.left,
            &.right {
                width: auto;

                &.icon {
                    padding-left: unset;
                    padding-right: unset;
                    width: auto;

                    > * {
                        overflow: unset;
                    }
                }
            }

            &.bottom,
            &.top {
                height: auto;
            }
        }

        .drawer-toggle-#{$breakpoint} {
            display: none;
        }

        .drawer-container-#{$breakpoint} > .overlay.drawer-overlay {
            display: none;
        }
    }
}

.btn {
    @include ripple;
    align-items: center;
    background-color: var(--tavenem-color-default);
    border: 0;
    border-radius: var(--tavenem-border-radius);
    box-shadow: 0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12);
    box-sizing: border-box;
    color: var(--tavenem-color-default-text);
    cursor: pointer;
    display: inline-flex;
    font-size: var(--tavenem-font-size-button);
    font-weight: var(--tavenem-font-weight-semibold);
    justify-content: center;
    line-height: var(--tavenem-lineheight-button);
    margin: 0;
    min-width: 4em;
    outline: 0;
    padding: 6px 16px;
    position: relative;
    text-decoration: none;
    text-transform: var(--tavenem-texttransform-button);
    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
    user-select: none;
    vertical-align: middle;
    -moz-appearance: none;
    -webkit-appearance: none;
    -webkit-tap-highlight-color: transparent;

    &::-moz-focus-inner {
        border-style: none;
    }

    &:hover,
    &:focus-visible {
        background-color: var(--tavenem-color-default-darken);
        box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0,0,0,.12);
    }

    &:active {
        box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0,0,0,.12);
    }

    &:disabled {
        box-shadow: none;
        background-color: var(--tavenem-color-action-disabled-bg) !important;
        color: var(--tavenem-color-text-disabled) !important;
        cursor: default;
        pointer-events: none;
    }

    > .icon:first-child {
        margin-inline-end: 8px;
        margin-inline-start: -4px;
    }

    > .icon:last-child {
        margin-inline-end: -4px;
        margin-inline-start: 8px;
    }

    > .icon:first-child:last-child {
        margin-inline-end: -4px;
        margin-inline-start: -4px;
    }

    &.small {
        font-size: calc(var(--tavenem-font-size-button) - 1px);
        padding: 4px 10px;

        > .icon:first-child {
            margin-inline-start: -2px;
        }

        > .icon:last-child {
            margin-inline-end: -2px;
        }

        > .icon:first-child:last-child {
            margin-inline-end: -2px;
            margin-inline-start: -2px;
        }
    }

    &.large {
        font-size: calc(var(--tavenem-font-size-button) + 1px);
        padding: 8px 22px;
    }

    &.outlined {
        color: var(--tavenem-color-action);
        padding: 5px 15px;

        &:hover,
        &:focus-visible {
            background-color: var(--tavenem-color-action-hover-bg);
        }

        &:disabled {
            border-color: var(--tavenem-color-action-disabled-bg);
        }

        &.small {
            font-size: calc(var(--tavenem-font-size-button) - 1px);
            padding: 3px 9px;
        }

        &.large {
            font-size: calc(var(--tavenem-font-size-button) + 1px);
            padding: 7px 21px;
        }
    }

    @each $theme in $theme-colors {
        &.#{$theme} {
            background-color: var(--tavenem-color-#{$theme});
            color: var(--tavenem-color-#{$theme}-text);

            &:hover,
            &:focus-visible {
                background-color: var(--tavenem-color-#{$theme}-darken);
            }

            &.darken {
                background-color: var(--tavenem-color-#{$theme}-darken);
                color: var(--tavenem-color-#{$theme}-text);

                &:hover,
                &:focus-visible {
                    background-color: var(--tavenem-color-#{$theme}-darken-2);
                }
            }

            &.lighten {
                background-color: var(--tavenem-color-#{$theme}-lighten);
                color: var(--tavenem-color-#{$theme}-text);

                &:hover,
                &:focus-visible {
                    background-color: var(--tavenem-color-#{$theme});
                }
            }

            &.outlined {
                &:hover,
                &:focus-visible {
                    background-color: var(--tavenem-color-#{$theme}-hover);
                }
            }
        }
    }
}
a.btn {
    @each $theme in $theme-colors {
        &.#{$theme} {
            &:hover:not(.disabled, :disabled),
            &:focus:not(.disabled, :disabled) {
                color: var(--tavenem-color-#{$theme}-text);
            }

            &.darken {
                &:hover:not(.disabled, :disabled),
                &:focus:not(.disabled, :disabled) {
                    color: var(--tavenem-color-#{$theme}-text);
                }
            }

            &.lighten {
                &:hover:not(.disabled, :disabled),
                &:focus:not(.disabled, :disabled) {
                    color: var(--tavenem-color-#{$theme}-text);
                }
            }
        }
    }
}

.btn-text {
    background-color: transparent !important;
    box-shadow: none;
    color: inherit;
    min-width: 0;

    &:hover,
    &:focus-visible {
        background-color: var(--tavenem-color-action-hover-bg) !important;
        box-shadow: none;
    }

    &:active {
        box-shadow: none;
    }

    &.small {
        font-size: calc(var(--tavenem-font-size-button) - 1px);
        padding: 4px 5px;
    }

    &.large {
        font-size: calc(var(--tavenem-font-size-button) + 1px);
        padding: 8px 11px;
    }

    @each $theme in $theme-colors {
        &.#{$theme} {
            color: var(--tavenem-color-#{$theme});

            &:hover,
            &:focus-visible {
                background-color: var(--tavenem-color-#{$theme}-hover) !important;
            }

            &.darken {
                color: var(--tavenem-color-#{$theme}-darken);
            }

            &.lighten {
                color: var(--tavenem-color-#{$theme}-lighten);
            }
        }
    }
}
a.btn-text {
    @each $theme in $theme-colors {
        &.#{$theme} {
            &:hover:not(.disabled, :disabled),
            &:focus:not(.disabled, :disabled) {
                color: var(--tavenem-color-#{$theme}-lighten);
            }

            &.darken {
                &:hover:not(.disabled, :disabled),
                &:focus:not(.disabled, :disabled) {
                    color: var(--tavenem-color-#{$theme});
                }
            }

            &.lighten {
                &:hover:not(.disabled, :disabled),
                &:focus:not(.disabled, :disabled) {
                    color: var(--tavenem-color-#{$theme}-lighten-2);
                }
            }
        }
    }
}

.btn-icon {
    border-radius: 9999px;
    flex: 0 0 auto;
    font-size: 1.25em;
    padding: 6px;
    text-align: center;

    &:after {
        transform: scale(7,7);
    }

    &.small {
        font-size: 1.125em;
        padding: 5px;
    }

    &.large {
        font-size: 1.375em;
        padding: 5px;
    }

    &.filled {
        box-shadow: 0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12);

        &:hover,
        &:focus-visible {
            background-color: var(--tavenem-color-default-darken);
            box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0,0,0,.12);
        }

        &:active {
            box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0,0,0,.12);
        }
    }

    &.outlined {
        font-size: calc(1.25em - 2px);
        padding: 5px;

        &.small {
            font-size: calc(1.125em - 2px);
            padding: 4px;
        }

        &.large {
            font-size: calc(1.375em - 2px);
            padding: 4px;
        }
    }

    @each $theme in $theme-colors {
        &.#{$theme}.filled {
            &:hover,
            &:focus-visible {
                background-color: var(--tavenem-color-#{$theme}-darken);
            }

            &.darken {
                &:hover,
                &:focus-visible {
                    background-color: var(--tavenem-color-#{$theme}-darken-2);
                }
            }

            &.lighten {
                &:hover,
                &:focus-visible {
                    background-color: var(--tavenem-color-#{$theme});
                }
            }
        }
    }
}

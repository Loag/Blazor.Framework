.chip {
    align-items: center;
    background-color: var(--tavenem-color-default);
    border: none;
    border-radius: 9999px;
    box-sizing: border-box;
    color: var(--tavenem-color-default-text);
    column-gap: .25rem;
    cursor: default;
    display: inline-flex;
    font-size: .875rem;
    height: 2rem;
    justify-content: center;
    line-height: normal;
    margin: .25rem;
    max-width: 100%;
    outline: 0;
    padding: 0 .75rem;
    position: relative;
    text-decoration: none;
    transition: background-color 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
    user-select: none;
    vertical-align: middle;
    white-space: nowrap;

    &.clickable {
        cursor: pointer;

        &:hover:not(.disabled, :disabled),
        &:focus-visible:not(.disabled, :disabled),
        &.selected {
            background-color: var(--tavenem-color-default-darken);
        }

        &.outlined {
            &:hover:not(.disabled, :disabled),
            &:focus-visible:not(.disabled, :disabled),
            &.selected {
                background-color: var(--tavenem-color-action-hover-bg);
            }
        }
    }

    &:disabled,
    &.disabled {
        opacity: 0.5;
        pointer-events: none;

        .icon {
            color: inherit;
        }
    }

    &.small {
        font-size: .75rem;
        height: 1.5rem;
    }

    &.large {
        font-size: 1rem;
        height: 2.5rem;
    }

    &.outlined {
        background-color: transparent;
        border: 1px solid var(--tavenem-color-border);
        color: var(--tavenem-color-text);
    }

    .btn-close {
        align-self: center;
    }

    @each $theme in $theme-colors {
        &.#{$theme} {
            background-color: var(--tavenem-color-#{$theme});
            color: var(--tavenem-color-#{$theme}-text);

            &.clickable {
                &:hover:not(.disabled, :disabled),
                &:focus-visible:not(.disabled, :disabled),
                &.selected {
                    background-color: var(--tavenem-color-#{$theme}-darken);
                }
            }

            &.outlined {
                background-color: transparent;
                border-color: var(--tavenem-color-#{$theme});
                color: var(--tavenem-color-#{$theme});

                &.clickable {
                    &:hover:not(.disabled, :disabled),
                    &:focus-visible:not(.disabled, :disabled),
                    &.selected {
                        background-color: var(--tavenem-color-#{$theme}-hover);
                    }
                }
            }

            &.darken {
                background-color: var(--tavenem-color-#{$theme}-darken);
                color: var(--tavenem-color-#{$theme}-text);

                &.clickable {
                    &:hover:not(.disabled, :disabled),
                    &:focus-visible:not(.disabled, :disabled),
                    &.selected {
                        background-color: var(--tavenem-color-#{$theme}-darken-2);
                    }
                }
            }

            &.lighten {
                background-color: var(--tavenem-color-#{$theme}-lighten);
                color: var(--tavenem-color-#{$theme}-text);

                &.clickable {
                    &:hover:not(.disabled, :disabled),
                    &:focus-visible:not(.disabled, :disabled),
                    &.selected {
                        background-color: var(--tavenem-color-#{$theme});
                    }
                }
            }
        }
    }
}

a.chip {
    @each $theme in $theme-colors {
        &.#{$theme} {
            &:hover:not(.disabled, :disabled),
            &:focus:not(.disabled, :disabled),
            &.selected {
                background-color: var(--tavenem-color-#{$theme}-darken);
            }

            &.outlined {
                &:hover:not(.disabled, :disabled),
                &:focus-visible:not(.disabled, :disabled),
                &.selected {
                    background-color: var(--tavenem-color-#{$theme}-hover);
                }
            }

            &.darken {
                &:hover:not(.disabled, :disabled),
                &:focus:not(.disabled, :disabled),
                &.selected {
                    background-color: var(--tavenem-color-#{$theme}-darken-2);
                }
            }

            &.lighten {
                &:hover:not(.disabled, :disabled),
                &:focus:not(.disabled, :disabled),
                &.selected {
                    background-color: var(--tavenem-color-#{$theme});
                }
            }
        }
    }
}

a.chip,
button.chip {
    cursor: pointer;

    &:hover:not(.disabled, :disabled),
    &:focus-visible:not(.disabled, :disabled),
    &.selected {
        background-color: var(--tavenem-color-default-darken);
    }

    &.outlined {
        &:hover:not(.disabled, :disabled),
        &:focus-visible:not(.disabled, :disabled),
        &.selected {
            background-color: var(--tavenem-color-action-hover-bg);
        }
    }

    @each $theme in $theme-colors {
        &.#{$theme} {
            &:hover:not(.disabled, :disabled),
            &:focus-visible:not(.disabled, :disabled),
            &.selected {
                background-color: var(--tavenem-color-#{$theme}-darken);
            }

            &.outlined {
                &:hover:not(.disabled, :disabled),
                &:focus-visible:not(.disabled, :disabled),
                &.selected {
                    background-color: var(--tavenem-color-#{$theme}-hover);
                }
            }

            &.darken {
                &:hover:not(.disabled, :disabled),
                &:focus-visible:not(.disabled, :disabled),
                &.selected {
                    background-color: var(--tavenem-color-#{$theme}-darken-2);
                }
            }

            &.lighten {
                &:hover:not(.disabled, :disabled),
                &:focus-visible:not(.disabled, :disabled),
                &.selected {
                    background-color: var(--tavenem-color-#{$theme});
                }
            }
        }
    }
}

.chip-text {
    color: var(--tavenem-color-default);
    background-color: var(--tavenem-color-default-hover);

    &.clickable {
        &:hover:not(.disabled, :disabled),
        &:focus-visible:not(.disabled, :disabled) {
            background-color: var(--tavenem-color-default-hover-bright);
        }
    }

    &.selected {
        background-color: var(--tavenem-color-default-hover-bright);
    }

    @each $theme in $theme-colors {
        &.#{$theme} {
            background-color: var(--tavenem-color-#{$theme}-hover);
            color: var(--tavenem-color-#{$theme});

            &.clickable {
                &:hover:not(.disabled, :disabled),
                &:focus-visible:not(.disabled, :disabled),
                &.selected {
                    background-color: var(--tavenem-color-#{$theme}-hover-bright);
                }
            }

            &.darken {
                background-color: var(--tavenem-color-#{$theme}-hover-dark);
                color: var(--tavenem-color-#{$theme}-darken);

                &.clickable {
                    &:hover:not(.disabled, :disabled),
                    &:focus-visible:not(.disabled, :disabled),
                    &.selected {
                        background-color: var(--tavenem-color-#{$theme}-hover-bright);
                    }
                }
            }

            &.lighten {
                background-color: var(--tavenem-color-#{$theme}-hover-light);
                color: var(--tavenem-color-#{$theme}-lighten);

                &.clickable {
                    &:hover:not(.disabled, :disabled),
                    &:focus-visible:not(.disabled, :disabled),
                    &.selected {
                        background-color: var(--tavenem-color-#{$theme}-hover-bright);
                    }
                }
            }
        }
    }
}
a.chip-text {
    @each $theme in $theme-colors {
        &.#{$theme} {
            &:hover:not(.disabled, :disabled),
            &:focus:not(.disabled, :disabled),
            &.selected {
                color: var(--tavenem-color-#{$theme}-lighten);
            }

            &.darken {
                &:hover:not(.disabled, :disabled),
                &:focus:not(.disabled, :disabled),
                &.selected {
                    color: var(--tavenem-color-#{$theme});
                }
            }

            &.lighten {
                &:hover:not(.disabled, :disabled),
                &:focus:not(.disabled, :disabled),
                &.selected {
                    color: var(--tavenem-color-#{$theme}-lighten-2);
                }
            }
        }
    }
}
